import unittest
from cal import KNN
import numpy as np

class Testcal(unittest.TestCase):

  def test_predict(self):
      cal = KNN(3, 'euclidean')
      result=cal.predict([[1.51514,14.85,0,2.42,73.72,0,8.39,0.56,0]])
      self.assertEqual(result,7)
 
  def test_manhattan(self):
      cal = KNN(3, 'manhattan')
      result=cal.manhattan([[ 1.51655, 12.75   ,  2.85   ,  1.44   , 73.27   ,  0.57   ,
        8.79   ,  0.11   ,  0.22   ]])
      np.testing.assert_allclose(result,[ 5.24446,  3.89106,  3.38037,  3.01111,  2.75087,  2.22059,
        2.74088,  2.46101,  4.11263,  1.971  ,  1.76084,  1.88108,
        1.75066,  1.65093,  1.66108,  1.73106,  1.79129,  6.18541,
        4.38256,  2.3908 ,  1.78095,  6.40311,  1.87081,  1.70096,
        2.75065,  2.09109,  2.46138,  1.79066,  1.57113,  2.20129,
        1.47113,  1.62092,  1.5312 ,  1.52098,  1.54128,  2.46088,
        3.69254,  1.55142,  6.47558,  6.47558,  1.67138,  1.421  ,
        2.17124,  5.88555,  1.44131,  3.34245,  1.98214,  6.34012,
        5.31568,  3.20243,  6.21665,  2.60271,  1.97153,  1.61182,
        1.47123,  1.43114,  2.1644 ,  1.94169,  3.28099,  2.92099,
        3.3725 ,  4.83322,  5.12517,  6.76572,  4.89517,  4.73444,
        4.32497,  4.22497,  4.25497,  5.32645,  6.68081,  4.10193,
        2.72062,  3.11024,  2.61059,  2.50065,  3.6101 ,  2.64028,
        3.66042,  2.88065,  3.34063,  2.51062,  3.14009,  2.61061,
        5.94246,  2.9703 ,  2.46086,  3.0301 ,  2.36037,  2.31015,
        2.74186,  1.9405 ,  2.12067,  2.26065,  1.56026,  2.79205,
        2.94186,  1.80088,  1.18034,  0.96156,  0.     ,  2.02075,
        2.35165,  8.5107 ,  6.34755, 10.5982 , 16.6247 , 14.84738,
        9.02567,  8.98163, 11.90009, 12.54084, 11.44122,  3.36237,
        3.27192,  3.60191,  3.24174,  4.69053,  3.19018,  3.61003,
        3.11189,  2.31008,  2.67032,  3.56052,  2.72522,  2.33217,
        2.18012,  4.19426,  3.91413,  6.53365,  6.92522, 11.17959,
        3.83158,  4.39145,  3.31156,  3.11134,  2.39151,  2.40056,
        2.21019,  2.37019,  3.29035,  2.49196,  1.77007,  2.80054,
        1.24005,  2.22184,  3.52114,  2.76045,  2.43015,  2.32012,
        2.7001 ,  6.60472,  3.73124,  2.84045,  2.00039,  1.87009,
        2.51   ,  6.18466,  2.99121,  3.04141,  2.84177,  3.46279,
        5.76556,  3.52114,  2.76045,  2.43015,  2.32012,  2.7001 ,
        6.60472,  3.73124,  2.84045,  2.00039,  1.87009,  2.51   ,
        6.18466,  2.99121,  3.04141,  2.84177,  3.46279,  5.76556,
        3.52114,  2.76045,  2.43015,  2.32012,  2.7001 ,  6.60472,
        3.73124,  2.84045,  2.00039,  1.87009,  2.51   ,  6.18466,
        2.99121,  3.04141,  2.84177,  3.46279,  5.76556,  3.52114,
        2.76045,  2.43015,  2.32012,  2.7001 ,  6.60472,  3.73124,
        2.84045,  2.00039,  1.87009,  2.51   ,  6.18466,  2.99121,
        3.04141,  2.84177,  3.46279,  5.76556, 13.21141,  3.6826 ,
        5.74516,  6.32496,  6.91314,  6.07011,  6.89339,  8.76714,
       15.31339, 15.08334,  8.82388,  4.68403,  6.02464, 13.21141,
        3.6826 ,  5.74516,  6.32496,  6.91314,  6.07011,  6.89339,
        8.76714, 15.31339, 15.08334,  8.82388,  4.68403,  6.02464,
       13.21141,  3.6826 ,  5.74516,  6.32496,  6.91314,  6.07011,
        6.89339,  8.76714, 15.31339, 15.08334,  8.82388,  4.68403,
        6.02464, 13.21141,  3.6826 ,  5.74516,  6.32496,  6.91314,
        6.07011,  6.89339,  8.76714, 15.31339, 15.08334,  8.82388,
        4.68403,  6.02464, 13.21141,  3.6826 ,  5.74516,  6.32496,
        6.91314,  6.07011,  6.89339,  8.76714, 15.31339, 15.08334,
        8.82388,  4.68403,  6.02464,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        7.97524, 10.41183,  2.6866 ,  7.88592,  9.2671 ,  4.28042,
        7.16053,  7.04032,  8.11064,  7.67028,  7.0411 ,  7.07099,
        7.21072,  7.44124,  7.60046,  8.05147,  8.41002,  8.02141,
        8.51003,  7.34038,  8.10077,  7.8101 , 11.43176,  8.07015,
        8.39032,  8.4403 ,  7.8641 ,  7.88004,  7.58056,  7.97524,
       10.41183,  2.6866 ,  7.88592,  9.2671 ,  4.28042,  7.16053,
        7.04032,  8.11064,  7.67028,  7.0411 ,  7.07099,  7.21072,
        7.44124,  7.60046,  8.05147,  8.41002,  8.02141,  8.51003,
        7.34038,  8.10077,  7.8101 , 11.43176,  8.07015,  8.39032,
        8.4403 ,  7.8641 ,  7.88004,  7.58056])


  def test_euclidean(self):
      cal = KNN(3, 'euclidean')
      result=cal.euclidean([[ 1.51655, 12.75   ,  2.85   ,  1.44   , 73.27   ,  0.57   ,
        8.79   ,  0.11   ,  0.22   ]])
      np.testing.assert_allclose(result, [2.47782564, 1.77490876, 1.51650919, 1.32691418, 1.23235578,
       1.11292423, 1.19682947, 1.11964326, 1.97957241, 0.94132938,
       0.95121013, 0.93241684, 0.96410603, 0.85574579, 0.85393276,
       0.86330824, 0.92276848, 2.8123352 , 1.95386964, 1.03009739,
       0.92444627, 2.85860275, 0.95692249, 0.83402693, 1.12911488,
       0.88842624, 1.09398442, 0.81639478, 0.7889875 , 0.92930171,
       0.77453294, 0.79925018, 0.77194653, 0.72869813, 0.80882732,
       1.04613612, 1.99000162, 0.76072467, 2.67281334, 2.67281334,
       0.80616494, 0.68731434, 0.93610979, 2.42116311, 0.72360329,
       1.67332185, 0.92271587, 2.65951169, 2.2104145 , 1.57302445,
       2.59463759, 1.19758396, 0.9103309 , 0.70249791, 0.63663295,
       0.6344299 , 0.91914056, 0.8527619 , 1.45423553, 1.28576863,
       1.43788256, 2.16220035, 2.19180901, 2.87322688, 2.01576951,
       1.97805958, 1.85473036, 1.80000686, 1.8161841 , 2.24152662,
       3.06750724, 1.9548411 , 1.3002309 , 1.38401592, 1.21971322,
       1.18194772, 1.57616624, 1.19314713, 1.66943109, 1.25729886,
       1.42926568, 1.2438249 , 1.31224998, 1.15121691, 2.63871295,
       1.27330283, 1.15117364, 1.32796838, 1.07070077, 1.07707939,
       1.39978693, 0.87326986, 0.94509283, 0.96322397, 0.77948705,
       1.35236985, 1.34632963, 0.80399053, 0.48207895, 0.47854199,
       0.        , 0.80249646, 1.07074867, 4.1849868 , 3.1680999 ,
       5.5730752 , 7.36177398, 8.55371276, 4.38224054, 4.05655059,
       6.77960189, 7.07686495, 6.48712771, 1.53954721, 1.52292603,
       1.62653117, 1.57619892, 2.03083733, 1.44336414, 1.6131026 ,
       1.43070038, 1.10981981, 1.19570067, 1.50605454, 1.17483073,
       1.16632101, 1.00657837, 2.04179288, 1.75974915, 3.04271479,
       3.34649477, 5.91149659, 1.69867669, 2.14100493, 1.4575673 ,
       1.52901988, 1.151044  , 1.11803413, 1.15295275, 1.13238688,
       1.38177427, 1.13521092, 0.91776904, 1.14568769, 0.56      ,
       1.12071557, 1.46054829, 1.20041668, 1.11180035, 1.03807515,
       1.19256028, 2.81918823, 1.57140114, 1.19079814, 1.02936881,
       0.77051931, 1.11009009, 2.53144657, 1.58174001, 1.63003128,
       1.40142896, 1.51947615, 2.67212105, 1.46054829, 1.20041668,
       1.11180035, 1.03807515, 1.19256028, 2.81918823, 1.57140114,
       1.19079814, 1.02936881, 0.77051931, 1.11009009, 2.53144657,
       1.58174001, 1.63003128, 1.40142896, 1.51947615, 2.67212105,
       1.46054829, 1.20041668, 1.11180035, 1.03807515, 1.19256028,
       2.81918823, 1.57140114, 1.19079814, 1.02936881, 0.77051931,
       1.11009009, 2.53144657, 1.58174001, 1.63003128, 1.40142896,
       1.51947615, 2.67212105, 1.46054829, 1.20041668, 1.11180035,
       1.03807515, 1.19256028, 2.81918823, 1.57140114, 1.19079814,
       1.02936881, 0.77051931, 1.11009009, 2.53144657, 1.58174001,
       1.63003128, 1.40142896, 1.51947615, 2.67212105, 5.60887707,
       1.80682228, 3.07805566, 3.5172183 , 4.00166339, 3.28385444,
       3.87612068, 4.66328757, 7.33201961, 7.25368949, 4.8418607 ,
       2.05762393, 3.57460788, 5.60887707, 1.80682228, 3.07805566,
       3.5172183 , 4.00166339, 3.28385444, 3.87612068, 4.66328757,
       7.33201961, 7.25368949, 4.8418607 , 2.05762393, 3.57460788,
       5.60887707, 1.80682228, 3.07805566, 3.5172183 , 4.00166339,
       3.28385444, 3.87612068, 4.66328757, 7.33201961, 7.25368949,
       4.8418607 , 2.05762393, 3.57460788, 5.60887707, 1.80682228,
       3.07805566, 3.5172183 , 4.00166339, 3.28385444, 3.87612068,
       4.66328757, 7.33201961, 7.25368949, 4.8418607 , 2.05762393,
       3.57460788, 5.60887707, 1.80682228, 3.07805566, 3.5172183 ,
       4.00166339, 3.28385444, 3.87612068, 4.66328757, 7.33201961,
       7.25368949, 4.8418607 , 2.05762393, 3.57460788, 1.89533803,
       1.7156946 , 2.1741672 , 1.81821448, 2.72551145, 3.42292352,
       3.94200543, 4.30202393, 6.34933297, 1.89533803, 1.7156946 ,
       2.1741672 , 1.81821448, 2.72551145, 3.42292352, 3.94200543,
       4.30202393, 6.34933297, 1.89533803, 1.7156946 , 2.1741672 ,
       1.81821448, 2.72551145, 3.42292352, 3.94200543, 4.30202393,
       6.34933297, 1.89533803, 1.7156946 , 2.1741672 , 1.81821448,
       2.72551145, 3.42292352, 3.94200543, 4.30202393, 6.34933297,
       1.89533803, 1.7156946 , 2.1741672 , 1.81821448, 2.72551145,
       3.42292352, 3.94200543, 4.30202393, 6.34933297, 1.89533803,
       1.7156946 , 2.1741672 , 1.81821448, 2.72551145, 3.42292352,
       3.94200543, 4.30202393, 6.34933297, 1.89533803, 1.7156946 ,
       2.1741672 , 1.81821448, 2.72551145, 3.42292352, 3.94200543,
       4.30202393, 6.34933297, 3.90834076, 4.41278861, 1.27100101,
       3.91875427, 4.58015834, 1.83940212, 3.74697215, 3.5394915 ,
       3.88601343, 3.7739237 , 3.49342256, 3.41934219, 3.66558324,
       3.6043032 , 3.8626675 , 3.92908414, 4.13401742, 3.79884219,
       3.98076626, 3.7875586 , 3.95598289, 3.88969151, 4.99338594,
       3.68878029, 3.72919564, 3.98670291, 3.72964031, 3.70755984,
       3.68325947, 3.90834076, 4.41278861, 1.27100101, 3.91875427,
       4.58015834, 1.83940212, 3.74697215, 3.5394915 , 3.88601343,
       3.7739237 , 3.49342256, 3.41934219, 3.66558324, 3.6043032 ,
       3.8626675 , 3.92908414, 4.13401742, 3.79884219, 3.98076626,
       3.7875586 , 3.95598289, 3.88969151, 4.99338594, 3.68878029,
       3.72919564, 3.98670291, 3.72964031, 3.70755984, 3.68325947])


  def test_minkowski(self):
      cal = KNN(3, 'minkowski')
      result=cal.minkowski([[ 1.51655, 12.75   ,  2.85   ,  1.44   , 73.27   ,  0.57   ,
        8.79   ,  0.11   ,  0.22   ]])
      np.testing.assert_allclose(result,[ 5.24446,  3.89106,  3.38037,  3.01111,  2.75087,  2.22059,
        2.74088,  2.46101,  4.11263,  1.971  ,  1.76084,  1.88108,
        1.75066,  1.65093,  1.66108,  1.73106,  1.79129,  6.18541,
        4.38256,  2.3908 ,  1.78095,  6.40311,  1.87081,  1.70096,
        2.75065,  2.09109,  2.46138,  1.79066,  1.57113,  2.20129,
        1.47113,  1.62092,  1.5312 ,  1.52098,  1.54128,  2.46088,
        3.69254,  1.55142,  6.47558,  6.47558,  1.67138,  1.421  ,
        2.17124,  5.88555,  1.44131,  3.34245,  1.98214,  6.34012,
        5.31568,  3.20243,  6.21665,  2.60271,  1.97153,  1.61182,
        1.47123,  1.43114,  2.1644 ,  1.94169,  3.28099,  2.92099,
        3.3725 ,  4.83322,  5.12517,  6.76572,  4.89517,  4.73444,
        4.32497,  4.22497,  4.25497,  5.32645,  6.68081,  4.10193,
        2.72062,  3.11024,  2.61059,  2.50065,  3.6101 ,  2.64028,
        3.66042,  2.88065,  3.34063,  2.51062,  3.14009,  2.61061,
        5.94246,  2.9703 ,  2.46086,  3.0301 ,  2.36037,  2.31015,
        2.74186,  1.9405 ,  2.12067,  2.26065,  1.56026,  2.79205,
        2.94186,  1.80088,  1.18034,  0.96156,  0.     ,  2.02075,
        2.35165,  8.5107 ,  6.34755, 10.5982 , 16.6247 , 14.84738,
        9.02567,  8.98163, 11.90009, 12.54084, 11.44122,  3.36237,
        3.27192,  3.60191,  3.24174,  4.69053,  3.19018,  3.61003,
        3.11189,  2.31008,  2.67032,  3.56052,  2.72522,  2.33217,
        2.18012,  4.19426,  3.91413,  6.53365,  6.92522, 11.17959,
        3.83158,  4.39145,  3.31156,  3.11134,  2.39151,  2.40056,
        2.21019,  2.37019,  3.29035,  2.49196,  1.77007,  2.80054,
        1.24005,  2.22184,  3.52114,  2.76045,  2.43015,  2.32012,
        2.7001 ,  6.60472,  3.73124,  2.84045,  2.00039,  1.87009,
        2.51   ,  6.18466,  2.99121,  3.04141,  2.84177,  3.46279,
        5.76556,  3.52114,  2.76045,  2.43015,  2.32012,  2.7001 ,
        6.60472,  3.73124,  2.84045,  2.00039,  1.87009,  2.51   ,
        6.18466,  2.99121,  3.04141,  2.84177,  3.46279,  5.76556,
        3.52114,  2.76045,  2.43015,  2.32012,  2.7001 ,  6.60472,
        3.73124,  2.84045,  2.00039,  1.87009,  2.51   ,  6.18466,
        2.99121,  3.04141,  2.84177,  3.46279,  5.76556,  3.52114,
        2.76045,  2.43015,  2.32012,  2.7001 ,  6.60472,  3.73124,
        2.84045,  2.00039,  1.87009,  2.51   ,  6.18466,  2.99121,
        3.04141,  2.84177,  3.46279,  5.76556, 13.21141,  3.6826 ,
        5.74516,  6.32496,  6.91314,  6.07011,  6.89339,  8.76714,
       15.31339, 15.08334,  8.82388,  4.68403,  6.02464, 13.21141,
        3.6826 ,  5.74516,  6.32496,  6.91314,  6.07011,  6.89339,
        8.76714, 15.31339, 15.08334,  8.82388,  4.68403,  6.02464,
       13.21141,  3.6826 ,  5.74516,  6.32496,  6.91314,  6.07011,
        6.89339,  8.76714, 15.31339, 15.08334,  8.82388,  4.68403,
        6.02464, 13.21141,  3.6826 ,  5.74516,  6.32496,  6.91314,
        6.07011,  6.89339,  8.76714, 15.31339, 15.08334,  8.82388,
        4.68403,  6.02464, 13.21141,  3.6826 ,  5.74516,  6.32496,
        6.91314,  6.07011,  6.89339,  8.76714, 15.31339, 15.08334,
        8.82388,  4.68403,  6.02464,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        4.4125 ,  4.12282,  4.76174,  4.25197,  6.24356,  7.44233,
        8.42261,  9.08314, 13.7654 ,  4.4125 ,  4.12282,  4.76174,
        4.25197,  6.24356,  7.44233,  8.42261,  9.08314, 13.7654 ,
        7.97524, 10.41183,  2.6866 ,  7.88592,  9.2671 ,  4.28042,
        7.16053,  7.04032,  8.11064,  7.67028,  7.0411 ,  7.07099,
        7.21072,  7.44124,  7.60046,  8.05147,  8.41002,  8.02141,
        8.51003,  7.34038,  8.10077,  7.8101 , 11.43176,  8.07015,
        8.39032,  8.4403 ,  7.8641 ,  7.88004,  7.58056,  7.97524,
       10.41183,  2.6866 ,  7.88592,  9.2671 ,  4.28042,  7.16053,
        7.04032,  8.11064,  7.67028,  7.0411 ,  7.07099,  7.21072,
        7.44124,  7.60046,  8.05147,  8.41002,  8.02141,  8.51003,
        7.34038,  8.10077,  7.8101 , 11.43176,  8.07015,  8.39032,
        8.4403 ,  7.8641 ,  7.88004,  7.58056])

 

if __name__== '__main__':
  unittest.main()
